<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="NullAvatar" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAggggggggggggggggggggggggggggggAAAAAAAggggggg
        ggggggggggggggggggggggggAAAAAAAgggggggggggghgijhggggggggggggggAAAAAAAggggggggggm
        DjDPPLHOjAggggggggggAAAAAAAggggggggkvPPPPPPPPPPHiAggggggggAAAAAAAggggggiFPPPPPPP
        PPPPPPLKigggggggAAAAAAAgggggnPPPPPPPPPPPPPPPPPGiggggggAAAAAAAgggglPPPPPPPPPPPPPP
        PPPPPKggggggAAAAAAAggggjPPPPPPPPPPPPPPPPPPPLIAggggAAAAAAAgggjvPPPPPPPPPPPPPPPPPP
        PPLCggggAAAAAAAgghnPPPPPPPPNMksnNPPPPPPPPAAgggAAAAAAAggiPPPPPPPPMIggggktPPPPPPPK
        AgggAAAAAAAgglvPPPPPPKAggggggttPPPPPPLIgggAAAAAAAghlPPPPPPPAggggggggnPPPPPPPAAgg
        AAAAAAAgglPPPPPPPKggggggggvPPPPPPPIgggAAAAAAAggvPPPPPPLIggggggggnPPPPPPPIgggAAAA
        AAAglvPPPPPPPKggggggghvPPPPPPPKgggAAAAAAAghtPPPPPPPPCggggggkvPPPPPPPKAggAAAAAAAg
        gnPPPPPPPPDCggggmnPPPPPPPPCAggAAAAAAAgguvPPPPPPPPPGJuPHPPPPPPPPPIgggAAAAAAAgghPP
        PPPPPPPPNOMNPPPPPPPPPKggggAAAAAAAgggmvPPPPPNGoEggggGvPPPPPOKAgggAAAAAAAgggkNPPPP
        IgggggggggpMPPPPLgggggAAAAAAAggggoPPOAggggggggggggFPPMAgggggAAAAAAAggggknvPggggg
        gggggggggPPKAgggggAAAAAAAgggggklggggggggggggggghkAggggggAAAAAAAgggggggphgggggggg
        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
</value>
  </data>
</root>